<UserControl
    x:Class="TMS.DeskTop.Views.ContactsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="clr-namespace:TMS.Core.Data;assembly=TMS.Core"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:TMS.DeskTop.Views.Contacts"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="900"
    d:DesignWidth="1440"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="menuRadioButtonTemplate2" TargetType="{x:Type RadioButton}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="0,8" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Border
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="AliceBlue" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="AliceBlue" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="AliceBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="BlockPopTip"
            BasedOn="{StaticResource PoptipBaseStyle}"
            TargetType="{x:Type hc:Poptip}">
            <Setter Property="Background" Value="#dd111111" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="PlacementType" Value="Right" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Offset" Value="5" />
        </Style>
        <Style
            x:Key="ToggleButtonIcon"
            BasedOn="{StaticResource ToggleButtonIconBaseStyle}"
            TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#FFF0F5F7" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        </Style>
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="10,0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="30" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border x:Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="True">
                                <DockPanel LastChildFill="True">
                                    <DockPanel.Margin>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <hc:TreeViewItemMarginConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </DockPanel.Margin>
                                    <ToggleButton x:Name="Expander"
                                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="Width" Value="16" />
                                                <Setter Property="Height" Value="16" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border
                                                                Width="16"
                                                                Height="16"
                                                                Padding="4"
                                                                Background="Transparent">
                                                                <Path x:Name="ExpandPath"
                                                                    Data="M508.89325,762.93166 A65.039498,65.039498,0,0,1,462.47259,743.44582 L97.125746,371.00402 C71.982728,345.3697 72.372878,304.18717 98.007197,279.04415 123.65597,253.87946 164.81682,254.29851 189.96706,279.92561 L508.90047,605.05084 827.83388,279.92561 A65.025048,65.025048,0,0,1,920.6752,371.00402 L555.31391,743.44582 A65.025048,65.025048,0,0,1,508.89325,762.93166 z"
                                                                    Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TreeViewItem}}}"
                                                                    RenderTransformOrigin="0.5,0.5"
                                                                    Stretch="Uniform">
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="-90" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="RenderTransform">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="0" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <ContentPresenter x:Name="PART_Header"
                                        Content="{TemplateBinding Header}"
                                        VerticalAlignment="Center"
                                        ContentSource="Header"
                                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </DockPanel>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#FFEFF0F1" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#FFF0F4FF" />
                                <Setter Property="Foreground" Value="#FF4E83FF" />
                            </Trigger>
                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DarkDefaultBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                            </MultiTrigger>-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#FF6D6D6D" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.BasedOn>
                <Style TargetType="{x:Type Control}">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle RadiusX="4" RadiusY="4">
                                                <Rectangle.Style>
                                                    <Style TargetType="{x:Type Rectangle}">
                                                        <Setter Property="Margin" Value="-2" />
                                                        <Setter Property="Opacity" Value="0.6" />
                                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                        <Setter Property="StrokeThickness" Value="2" />
                                                        <Setter Property="StrokeDashArray" Value="1 1" />
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.BasedOn>
        </Style>
        <Style x:Key="deptTreeViewStyle" TargetType="{x:Type TreeView}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="hc:ScrollViewer.IsInertiaEnabled" Value="False" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <hc:ScrollViewer x:Name="_tv_scrollviewer_"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                CanContentScroll="False"
                                Focusable="False"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                IsInertiaEnabled="{Binding (hc:ScrollViewer.IsInertiaEnabled), RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <hc:ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type hc:ScrollViewer}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="Storyboard2">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="Storyboard1">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0"
                                                Grid.RowSpan="2"
                                                Grid.ColumnSpan="2"
                                                Content="{TemplateBinding Content}"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1"
                                                AutomationProperties.AutomationId="VerticalScrollBar"
                                                Cursor="Arrow"
                                                Maximum="{TemplateBinding ScrollableHeight}"
                                                Minimum="0"
                                                Opacity="0"
                                                ViewportSize="{TemplateBinding ViewportHeight}"
                                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ScrollBar.Style>
                                                    <Style TargetType="{x:Type ScrollBar}">
                                                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
                                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                        <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="Width" Value="8" />
                                                        <Setter Property="MinWidth" Value="8" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                    <hc:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                        <Border Background="{TemplateBinding Background}" />
                                                                        <Track x:Name="PART_Track"
                                                                            IsDirectionReversed="True"
                                                                            IsEnabled="{TemplateBinding IsMouseOver}">
                                                                            <Track.DecreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                            <Setter Property="Background" Value="Transparent" />
                                                                                            <Setter Property="Focusable" Value="False" />
                                                                                            <Setter Property="IsTabStop" Value="False" />
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle
                                                                                                            Width="{TemplateBinding Width}"
                                                                                                            Height="{TemplateBinding Height}"
                                                                                                            Fill="{TemplateBinding Background}" />
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.DecreaseRepeatButton>
                                                                            <Track.IncreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                            <Setter Property="Background" Value="Transparent" />
                                                                                            <Setter Property="Focusable" Value="False" />
                                                                                            <Setter Property="IsTabStop" Value="False" />
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle
                                                                                                            Width="{TemplateBinding Width}"
                                                                                                            Height="{TemplateBinding Height}"
                                                                                                            Fill="{TemplateBinding Background}" />
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.IncreaseRepeatButton>
                                                                            <Track.Thumb>
                                                                                <Thumb Background="{TemplateBinding Foreground}">
                                                                                    <Thumb.Style>
                                                                                        <Style TargetType="{x:Type Thumb}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                            <Setter Property="IsTabStop" Value="False" />
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                        <ControlTemplate.Resources>
                                                                                                            <Storyboard x:Key="Storyboard2">
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                            <Storyboard x:Key="Storyboard1">
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </ControlTemplate.Resources>
                                                                                                        <Border Width="{TemplateBinding Width}" Background="Transparent">
                                                                                                            <Rectangle x:Name="rectangle"
                                                                                                                Width="2"
                                                                                                                Height="{TemplateBinding Height}"
                                                                                                                HorizontalAlignment="Right"
                                                                                                                Fill="{TemplateBinding Background}"
                                                                                                                RadiusX="1"
                                                                                                                RadiusY="1"
                                                                                                                SnapsToDevicePixels="True">
                                                                                                                <Rectangle.RenderTransform>
                                                                                                                    <TransformGroup>
                                                                                                                        <TranslateTransform X="-2" />
                                                                                                                    </TransformGroup>
                                                                                                                </Rectangle.RenderTransform>
                                                                                                            </Rectangle>
                                                                                                        </Border>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                                                <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                            </Trigger>
                                                                                                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                                <BeginStoryboard>
                                                                                                                    <Storyboard>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </BeginStoryboard>
                                                                                                            </EventTrigger>
                                                                                                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                                <BeginStoryboard>
                                                                                                                    <Storyboard>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </BeginStoryboard>
                                                                                                            </EventTrigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Thumb.Style>
                                                                                </Thumb>
                                                                            </Track.Thumb>
                                                                        </Track>
                                                                    </hc:SimplePanel>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="Orientation" Value="Horizontal">
                                                                <Setter Property="Width" Value="Auto" />
                                                                <Setter Property="MinWidth" Value="0" />
                                                                <Setter Property="Height" Value="8" />
                                                                <Setter Property="MinHeight" Value="8" />
                                                                <Setter Property="BorderThickness" Value="0,1" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                            <hc:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                                <Border Background="{TemplateBinding Background}" />
                                                                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                    <Track.DecreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                    <Setter Property="Background" Value="Transparent" />
                                                                                                    <Setter Property="Focusable" Value="False" />
                                                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle
                                                                                                                    Width="{TemplateBinding Width}"
                                                                                                                    Height="{TemplateBinding Height}"
                                                                                                                    Fill="{TemplateBinding Background}" />
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.DecreaseRepeatButton>
                                                                                    <Track.IncreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                    <Setter Property="Background" Value="Transparent" />
                                                                                                    <Setter Property="Focusable" Value="False" />
                                                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle
                                                                                                                    Width="{TemplateBinding Width}"
                                                                                                                    Height="{TemplateBinding Height}"
                                                                                                                    Fill="{TemplateBinding Background}" />
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.IncreaseRepeatButton>
                                                                                    <Track.Thumb>
                                                                                        <Thumb Background="{TemplateBinding Foreground}">
                                                                                            <Thumb.Style>
                                                                                                <Style TargetType="{x:Type Thumb}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                                <ControlTemplate.Resources>
                                                                                                                    <Storyboard x:Key="Storyboard2">
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                    <Storyboard x:Key="Storyboard1">
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </ControlTemplate.Resources>
                                                                                                                <Border Height="{TemplateBinding Height}" Background="Transparent">
                                                                                                                    <Rectangle x:Name="rectangle"
                                                                                                                        Width="{TemplateBinding Width}"
                                                                                                                        Height="2"
                                                                                                                        VerticalAlignment="Bottom"
                                                                                                                        Fill="{TemplateBinding Background}"
                                                                                                                        RadiusX="4"
                                                                                                                        RadiusY="4"
                                                                                                                        SnapsToDevicePixels="True">
                                                                                                                        <Rectangle.RenderTransform>
                                                                                                                            <TransformGroup>
                                                                                                                                <TranslateTransform Y="-2" />
                                                                                                                            </TransformGroup>
                                                                                                                        </Rectangle.RenderTransform>
                                                                                                                    </Rectangle>
                                                                                                                </Border>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsDragging" Value="True">
                                                                                                                        <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                                    </Trigger>
                                                                                                                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                                        <BeginStoryboard>
                                                                                                                            <Storyboard>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </BeginStoryboard>
                                                                                                                    </EventTrigger>
                                                                                                                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                                        <BeginStoryboard>
                                                                                                                            <Storyboard>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </BeginStoryboard>
                                                                                                                    </EventTrigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Thumb.Style>
                                                                                        </Thumb>
                                                                                    </Track.Thumb>
                                                                                </Track>
                                                                            </hc:SimplePanel>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ScrollBar.Style>
                                            </ScrollBar>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0"
                                                AutomationProperties.AutomationId="HorizontalScrollBar"
                                                Cursor="Arrow"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                Minimum="0"
                                                Opacity="0"
                                                Orientation="Horizontal"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ScrollBar.Style>
                                                    <Style TargetType="{x:Type ScrollBar}">
                                                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
                                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                        <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="Width" Value="8" />
                                                        <Setter Property="MinWidth" Value="8" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                    <hc:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                        <Border Background="{TemplateBinding Background}" />
                                                                        <Track x:Name="PART_Track"
                                                                            IsDirectionReversed="True"
                                                                            IsEnabled="{TemplateBinding IsMouseOver}">
                                                                            <Track.DecreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                            <Setter Property="Background" Value="Transparent" />
                                                                                            <Setter Property="Focusable" Value="False" />
                                                                                            <Setter Property="IsTabStop" Value="False" />
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle
                                                                                                            Width="{TemplateBinding Width}"
                                                                                                            Height="{TemplateBinding Height}"
                                                                                                            Fill="{TemplateBinding Background}" />
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.DecreaseRepeatButton>
                                                                            <Track.IncreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                            <Setter Property="Background" Value="Transparent" />
                                                                                            <Setter Property="Focusable" Value="False" />
                                                                                            <Setter Property="IsTabStop" Value="False" />
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle
                                                                                                            Width="{TemplateBinding Width}"
                                                                                                            Height="{TemplateBinding Height}"
                                                                                                            Fill="{TemplateBinding Background}" />
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.IncreaseRepeatButton>
                                                                            <Track.Thumb>
                                                                                <Thumb Background="{TemplateBinding Foreground}">
                                                                                    <Thumb.Style>
                                                                                        <Style TargetType="{x:Type Thumb}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                            <Setter Property="IsTabStop" Value="False" />
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                        <ControlTemplate.Resources>
                                                                                                            <Storyboard x:Key="Storyboard2">
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                            <Storyboard x:Key="Storyboard1">
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </ControlTemplate.Resources>
                                                                                                        <Border Width="{TemplateBinding Width}" Background="Transparent">
                                                                                                            <Rectangle x:Name="rectangle"
                                                                                                                Width="2"
                                                                                                                Height="{TemplateBinding Height}"
                                                                                                                HorizontalAlignment="Right"
                                                                                                                Fill="{TemplateBinding Background}"
                                                                                                                RadiusX="1"
                                                                                                                RadiusY="1"
                                                                                                                SnapsToDevicePixels="True">
                                                                                                                <Rectangle.RenderTransform>
                                                                                                                    <TransformGroup>
                                                                                                                        <TranslateTransform X="-2" />
                                                                                                                    </TransformGroup>
                                                                                                                </Rectangle.RenderTransform>
                                                                                                            </Rectangle>
                                                                                                        </Border>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                                                <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                            </Trigger>
                                                                                                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                                <BeginStoryboard>
                                                                                                                    <Storyboard>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </BeginStoryboard>
                                                                                                            </EventTrigger>
                                                                                                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                                <BeginStoryboard>
                                                                                                                    <Storyboard>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </BeginStoryboard>
                                                                                                            </EventTrigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Thumb.Style>
                                                                                </Thumb>
                                                                            </Track.Thumb>
                                                                        </Track>
                                                                    </hc:SimplePanel>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="Orientation" Value="Horizontal">
                                                                <Setter Property="Width" Value="Auto" />
                                                                <Setter Property="MinWidth" Value="0" />
                                                                <Setter Property="Height" Value="8" />
                                                                <Setter Property="MinHeight" Value="8" />
                                                                <Setter Property="BorderThickness" Value="0,1" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                            <hc:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                                <Border Background="{TemplateBinding Background}" />
                                                                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                    <Track.DecreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                    <Setter Property="Background" Value="Transparent" />
                                                                                                    <Setter Property="Focusable" Value="False" />
                                                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle
                                                                                                                    Width="{TemplateBinding Width}"
                                                                                                                    Height="{TemplateBinding Height}"
                                                                                                                    Fill="{TemplateBinding Background}" />
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.DecreaseRepeatButton>
                                                                                    <Track.IncreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                    <Setter Property="Background" Value="Transparent" />
                                                                                                    <Setter Property="Focusable" Value="False" />
                                                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle
                                                                                                                    Width="{TemplateBinding Width}"
                                                                                                                    Height="{TemplateBinding Height}"
                                                                                                                    Fill="{TemplateBinding Background}" />
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.IncreaseRepeatButton>
                                                                                    <Track.Thumb>
                                                                                        <Thumb Background="{TemplateBinding Foreground}">
                                                                                            <Thumb.Style>
                                                                                                <Style TargetType="{x:Type Thumb}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                                <ControlTemplate.Resources>
                                                                                                                    <Storyboard x:Key="Storyboard2">
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                    <Storyboard x:Key="Storyboard1">
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </ControlTemplate.Resources>
                                                                                                                <Border Height="{TemplateBinding Height}" Background="Transparent">
                                                                                                                    <Rectangle x:Name="rectangle"
                                                                                                                        Width="{TemplateBinding Width}"
                                                                                                                        Height="2"
                                                                                                                        VerticalAlignment="Bottom"
                                                                                                                        Fill="{TemplateBinding Background}"
                                                                                                                        RadiusX="4"
                                                                                                                        RadiusY="4"
                                                                                                                        SnapsToDevicePixels="True">
                                                                                                                        <Rectangle.RenderTransform>
                                                                                                                            <TransformGroup>
                                                                                                                                <TranslateTransform Y="-2" />
                                                                                                                            </TransformGroup>
                                                                                                                        </Rectangle.RenderTransform>
                                                                                                                    </Rectangle>
                                                                                                                </Border>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsDragging" Value="True">
                                                                                                                        <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                                                                                                                    </Trigger>
                                                                                                                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                                                                                        <BeginStoryboard>
                                                                                                                            <Storyboard>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="8" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="4" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </BeginStoryboard>
                                                                                                                    </EventTrigger>
                                                                                                                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                                                                                        <BeginStoryboard>
                                                                                                                            <Storyboard>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-2" />
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </BeginStoryboard>
                                                                                                                    </EventTrigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Thumb.Style>
                                                                                        </Thumb>
                                                                                    </Track.Thumb>
                                                                                </Track>
                                                                            </hc:SimplePanel>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ScrollBar.Style>
                                            </ScrollBar>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </hc:ScrollViewer.Template>
                                <ItemsPresenter />
                            </hc:ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="Background" Value="#FFF0F0F0" />
                            </Trigger>
                            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                                <Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="True" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.BasedOn>
                <Style TargetType="{x:Type Control}">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle RadiusX="4" RadiusY="4">
                                                <Rectangle.Style>
                                                    <Style TargetType="{x:Type Rectangle}">
                                                        <Setter Property="Margin" Value="-2" />
                                                        <Setter Property="Opacity" Value="0.6" />
                                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                        <Setter Property="StrokeThickness" Value="2" />
                                                        <Setter Property="StrokeDashArray" Value="1 1" />
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="UserItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Height" Value="80" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="border"
                            Height="60"
                            CornerRadius="10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="100" />
                                </Grid.ColumnDefinitions>
                                <hc:Gravatar
                                    Width="50"
                                    Height="50"
                                    Source="{Binding Icon}"
                                    Style="{StaticResource GravatarCircleImg}" />
                                <TextBlock Grid.Column="1"
                                    Text="{Binding Name}"
                                    VerticalAlignment="Center"
                                    FontSize="15"
                                    Foreground="Black" />
                                <Label Grid.Column="2"
                                    Content="超级管理员"
                                    Margin="5"
                                    Padding="5"
                                    HorizontalAlignment="Left"
                                    hc:BorderElement.CornerRadius="0"
                                    Background="#FF6425D0"
                                    BorderThickness="0"
                                    FontSize="10"
                                    Foreground="White" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter TargetName="border" Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#FFDEE0E3" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource ListBoxBaseStyle}" TargetType="ListBox">
            <Setter Property="ItemContainerStyle" Value="{StaticResource UserItemStyle}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style x:Key="funcButtonStyle" TargetType="Button">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="#FFDDDDDD" />
            <Setter Property="BorderBrush" Value="#FF707070" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                Content="{TemplateBinding Content}"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFE1EAFF" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFBACEFD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Border Grid.Column="1" Background="Transparent">
        <Border
            Background="White"
            BorderThickness="0"
            CornerRadius="0">
            <Grid x:Name="mainGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid Margin="0,30,0,30">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="240" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ToggleButton x:Name="toggleBtn"
                        IsChecked="{Binding ToggleBtnIsChecked, Mode=OneWayToSource}"
                        Margin="20,0,0,0"
                        HorizontalAlignment="Left"
                        hc:IconSwitchElement.Geometry="{StaticResource LeftGeometry}"
                        hc:IconSwitchElement.GeometrySelected="{StaticResource RightGeometry}"
                        Checked="ToggleButton_Checked"
                        Cursor="Hand"
                        Foreground="LightSlateGray"
                        Style="{StaticResource ToggleButtonIcon}"
                        Unchecked="ToggleButton_Unchecked" />
                    <StackPanel x:Name="funcRadioBtns" Grid.Row="2">
                        <!--  Adding Menu buttons  -->
                        <RadioButton x:Name="test"
                            Margin="10,0,10,0"
                            Style="{StaticResource menuRadioButtonTemplate2}"
                            Tag="Tag3">
                            <RadioButton.Content>
                                <local:FIconRadioButton
                                    Text="组织架构"
                                    Height="40"
                                    Icon="&#xe62f;"
                                    IconColor="#FF14C0FF" />
                            </RadioButton.Content>
                        </RadioButton>
                        <RadioButton
                            Margin="10,10,10,0"
                            Style="{StaticResource menuRadioButtonTemplate2}"
                            Tag="Tag3">
                            <RadioButton.Content>
                                <local:FIconRadioButton
                                    Text="我的群组"
                                    Height="40"
                                    Icon="&#xe610;"
                                    IconColor="#FFFFC60A" />
                            </RadioButton.Content>
                        </RadioButton>
                    </StackPanel>
                </Grid>
                <Border Grid.Column="1" Background="Transparent">
                    <Border
                        Background="#FFEEF5F5"
                        BorderThickness="0"
                        CornerRadius="0">
                        <Grid Margin="20,0,0,20">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="100" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border
                                Height="60"
                                Margin="0,0,20,0"
                                VerticalAlignment="Center"
                                CornerRadius="10"
                                Background="White"
                                Effect="{StaticResource EffectShadow1}">
                                <TextBlock
                                    Text="组织架构"
                                    Margin="25,0,0,0"
                                    VerticalAlignment="Center"
                                    FontSize="24"
                                    FontWeight="Bold" />
                            </Border>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="250" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Background="Transparent">
                                    <Border
                                        Background="White"
                                        BorderThickness="0"
                                        CornerRadius="10"
                                        Effect="{StaticResource EffectShadow1}">
                                        <Grid Margin="10">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="40" />
                                                <RowDefinition Height="40" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <hc:SearchBar
                                                Height="30"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                hc:BorderElement.CornerRadius="5"
                                                hc:InfoElement.Placeholder=" 搜索"
                                                Style="{StaticResource SearchBarPlus}" />
                                            <Grid Grid.Row="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="50" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Border Grid.Column="0"
                                                    Width="28"
                                                    Height="28"
                                                    CornerRadius="5">
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1.2,0.5">
                                                            <GradientStop Offset="0" Color="#FF4280FF" />
                                                            <GradientStop Offset="0" Color="#FF5D93FE" />
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <TextBlock
                                                        Text="S"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        FontSize="20"
                                                        FontWeight="Bold"
                                                        Foreground="White" />
                                                </Border>
                                                <TextBlock Grid.Column="1"
                                                    Text="SuperGame"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    FontSize="20" />
                                            </Grid>
                                            <TreeView x:Name="tvProperties" Grid.Row="2"
                                                hc:BorderElement.CornerRadius="5"
                                                Background="Transparent"
                                                BorderThickness="0">
                                                <TreeView.ItemTemplate>
                                                    <HierarchicalDataTemplate DataType="{x:Type data:TreeNodeItem}" ItemsSource="{Binding Children}">
                                                        <StackPanel Height="40" Orientation="Horizontal">
                                                            <TextBlock
                                                                Text="&#xe74b;"
                                                                Margin="2,0,5,0"
                                                                VerticalAlignment="Center"
                                                                FontFamily="/Resources/Fonts/#iconfont"
                                                                FontSize="16" />
                                                            <TextBlock
                                                                Text="{Binding Name}"
                                                                VerticalAlignment="Center"
                                                                FontSize="14" />
                                                        </StackPanel>
                                                    </HierarchicalDataTemplate>
                                                </TreeView.ItemTemplate>
                                            </TreeView>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Grid Grid.Column="1" Margin="20">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="60" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock
                                                Text="研发部 /"
                                                VerticalAlignment="Center"
                                                Cursor="Hand"
                                                FontSize="25"
                                                FontWeight="Bold"
                                                Foreground="{StaticResource SecondaryTextBrush}" />
                                            <TextBlock
                                                Text=" 研发一部"
                                                VerticalAlignment="Center"
                                                Cursor="Hand"
                                                FontSize="25"
                                                FontWeight="Bold"
                                                Foreground="#FF4280FF" />
                                        </StackPanel>
                                        <StackPanel Grid.Column="1"
                                            Margin="0,0,30,0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center">
                                            <Button
                                                Background="Transparent"
                                                BorderBrush="#FF3370FF"
                                                Style="{StaticResource funcButtonStyle}">
                                                <Button.Content>
                                                    <StackPanel Margin="5" Orientation="Horizontal">
                                                        <TextBlock
                                                            Text="&#xe64f;"
                                                            VerticalAlignment="Center"
                                                            FontFamily="/Resources/Fonts/#iconfont"
                                                            FontSize="18"
                                                            Foreground="#FF3370FF" />
                                                        <TextBlock
                                                            Text="添加组织成员"
                                                            Margin="2,0,0,0"
                                                            VerticalAlignment="Center"
                                                            FontSize="14"
                                                            Foreground="#FF3370FF" />
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                    <Border Grid.Row="1" Background="Transparent">
                                        <Border
                                            Background="White"
                                            BorderThickness="0"
                                            CornerRadius="10"
                                            Effect="{StaticResource EffectShadow1}">
                                            <Grid Margin="10">
                                                <ListBox ItemsSource="{Binding UserList}" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                </Border>
            </Grid>
        </Border>
    </Border>
</UserControl>
