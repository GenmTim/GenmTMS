<prism:PrismApplication
    x:Class="TMS.DeskTop.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:TMS.DeskTop"
    xmlns:attach="clr-namespace:TMS.DeskTop.UserControls.Attach"
    xmlns:enums="clr-namespace:TMS.Core.Data.Enums;assembly=TMS.Core"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:prism="http://prismlibrary.com/">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/Styles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Genm;component/Themes/Themes.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template" Value="{x:Null}" />
            </Style>
            <Style
                x:Key="ButtonCircular"
                BasedOn="{StaticResource ButtonBaseStyle}"
                TargetType="{x:Type Button}">
                <Setter Property="Width" Value="33" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                Style="{StaticResource BorderCircular}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  基础圆形文字图标按钮  -->
            <Style
                x:Key="IconFontCircularBtnBaseStyle"
                BasedOn="{StaticResource ButtonIconCircular}"
                TargetType="Button">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="{StaticResource FIconPlusFontFamily}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border
                                Style="{StaticResource BorderCircular}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  渐变的圆形文字图标按钮  -->
            <Style
                x:Key="PIconFontBtnStyle"
                BasedOn="{StaticResource IconFontCircularBtnBaseStyle}"
                TargetType="Button">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0, 0.5" EndPoint="8, 0.5">
                            <GradientStop Offset="0" Color="{DynamicResource ThirdlyTextColor}" />
                            <GradientStop Offset="1" Color="White" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="White" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0, 0.5" EndPoint="8, 0.5">
                                    <GradientStop Offset="0" Color="{DynamicResource PrimaryColor}" />
                                    <GradientStop Offset="1" Color="White" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style
                x:Key="OptBtnStyle"
                BasedOn="{StaticResource TextBtnStyle}"
                TargetType="Button">
                <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="FontFamily" Value="{StaticResource FIconPlusFontFamily}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <hc:EnumDataProvider x:Key="FieldTypes" Type="enums:FieldType" />
        </ResourceDictionary>
    </Application.Resources>
</prism:PrismApplication>
